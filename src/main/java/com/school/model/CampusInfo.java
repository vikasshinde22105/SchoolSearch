package com.school.model;

// Generated Jun 16, 2015 4:57:47 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CampusInfo generated by hbm2java
 */
@Entity
@Table(name = "campus_info", catalog = "school_db")
public class CampusInfo implements java.io.Serializable {

	private Integer id;
	private School school;
	private String name;
	private Short campusSizeUnitId;
	private Float campusSize;
	private Integer totalBuildings;
	private Integer totalPlaygrounds;
	private Integer totalBoys;
	private Integer totalGirls;
	private Integer totalMaleTeachers;
	private Integer totalFemaleTeachers;
	private Integer totalStudents;
	private Integer maleSupportingStaff;
	private Integer femaleSupportingStaff;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;

	public CampusInfo() {
	}

	public CampusInfo(School school, String name, Short campusSizeUnitId,
			Float campusSize, Integer totalBuildings, Integer totalPlaygrounds,
			Integer totalBoys, Integer totalGirls, Integer totalMaleTeachers,
			Integer totalFemaleTeachers, Integer totalStudents,
			Integer maleSupportingStaff, Integer femaleSupportingStaff,
			Date lastUpdatedOn, Integer lastUpdatedBy) {
		this.school = school;
		this.name = name;
		this.campusSizeUnitId = campusSizeUnitId;
		this.campusSize = campusSize;
		this.totalBuildings = totalBuildings;
		this.totalPlaygrounds = totalPlaygrounds;
		this.totalBoys = totalBoys;
		this.totalGirls = totalGirls;
		this.totalMaleTeachers = totalMaleTeachers;
		this.totalFemaleTeachers = totalFemaleTeachers;
		this.totalStudents = totalStudents;
		this.maleSupportingStaff = maleSupportingStaff;
		this.femaleSupportingStaff = femaleSupportingStaff;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_id")
	public School getSchool() {
		return this.school;
	}

	public void setSchool(School school) {
		this.school = school;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "campus_size_unit_id")
	public Short getCampusSizeUnitId() {
		return this.campusSizeUnitId;
	}

	public void setCampusSizeUnitId(Short campusSizeUnitId) {
		this.campusSizeUnitId = campusSizeUnitId;
	}

	@Column(name = "campus_size", precision = 9, scale = 3)
	public Float getCampusSize() {
		return this.campusSize;
	}

	public void setCampusSize(Float campusSize) {
		this.campusSize = campusSize;
	}

	@Column(name = "total_buildings")
	public Integer getTotalBuildings() {
		return this.totalBuildings;
	}

	public void setTotalBuildings(Integer totalBuildings) {
		this.totalBuildings = totalBuildings;
	}

	@Column(name = "total_playgrounds")
	public Integer getTotalPlaygrounds() {
		return this.totalPlaygrounds;
	}

	public void setTotalPlaygrounds(Integer totalPlaygrounds) {
		this.totalPlaygrounds = totalPlaygrounds;
	}

	@Column(name = "total_boys")
	public Integer getTotalBoys() {
		return this.totalBoys;
	}

	public void setTotalBoys(Integer totalBoys) {
		this.totalBoys = totalBoys;
	}

	@Column(name = "total_girls")
	public Integer getTotalGirls() {
		return this.totalGirls;
	}

	public void setTotalGirls(Integer totalGirls) {
		this.totalGirls = totalGirls;
	}

	@Column(name = "total_male_teachers")
	public Integer getTotalMaleTeachers() {
		return this.totalMaleTeachers;
	}

	public void setTotalMaleTeachers(Integer totalMaleTeachers) {
		this.totalMaleTeachers = totalMaleTeachers;
	}

	@Column(name = "total_female_teachers")
	public Integer getTotalFemaleTeachers() {
		return this.totalFemaleTeachers;
	}

	public void setTotalFemaleTeachers(Integer totalFemaleTeachers) {
		this.totalFemaleTeachers = totalFemaleTeachers;
	}

	@Column(name = "total_students")
	public Integer getTotalStudents() {
		return this.totalStudents;
	}

	public void setTotalStudents(Integer totalStudents) {
		this.totalStudents = totalStudents;
	}

	@Column(name = "male_supporting_staff")
	public Integer getMaleSupportingStaff() {
		return this.maleSupportingStaff;
	}

	public void setMaleSupportingStaff(Integer maleSupportingStaff) {
		this.maleSupportingStaff = maleSupportingStaff;
	}

	@Column(name = "female_supporting_staff")
	public Integer getFemaleSupportingStaff() {
		return this.femaleSupportingStaff;
	}

	public void setFemaleSupportingStaff(Integer femaleSupportingStaff) {
		this.femaleSupportingStaff = femaleSupportingStaff;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
