package com.school.model;

// Generated Jun 26, 2015 2:39:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ClassSection generated by hbm2java
 */
@Entity
@Table(name = "class_section")
public class ClassSection implements java.io.Serializable {

	private Integer id;
	private SectionType sectionType;
	private ClassInfo classInfo;
	private Short vacantSeat;
	private Short totalSeat;
	private Date admissionFrom;
	private Date admissionTo;
	private Date admissionDeadline;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;
	private Set<AttendanceInfo> attendanceInfos = new HashSet<AttendanceInfo>(0);
	private Set<TimeTable> timeTables = new HashSet<TimeTable>(0);
	private Set<SchoolFeeDetail> schoolFeeDetails = new HashSet<SchoolFeeDetail>(
			0);
	private Set<AttendanceInfo> attendanceInfos_1 = new HashSet<AttendanceInfo>(
			0);
	private Set<StudentClass> studentClasses = new HashSet<StudentClass>(0);
	private Set<ClassAccessories> classAccessorieses = new HashSet<ClassAccessories>(
			0);
	private Set<TeacherSubject> teacherSubjects = new HashSet<TeacherSubject>(0);
	private Set<Event> events = new HashSet<Event>(0);
	private Set<TeacherClass> teacherClasses = new HashSet<TeacherClass>(0);
	private Set<SchoolExam> schoolExams = new HashSet<SchoolExam>(0);

	public ClassSection() {
	}

	public ClassSection(SectionType sectionType, ClassInfo classInfo,
			Short vacantSeat, Short totalSeat, Date admissionFrom,
			Date admissionTo, Date admissionDeadline, Date lastUpdatedOn,
			Integer lastUpdatedBy, Set<AttendanceInfo> attendanceInfos,
			Set<TimeTable> timeTables, Set<SchoolFeeDetail> schoolFeeDetails,
			Set<AttendanceInfo> attendanceInfos_1,
			Set<StudentClass> studentClasses,
			Set<ClassAccessories> classAccessorieses,
			Set<TeacherSubject> teacherSubjects, Set<Event> events,
			Set<TeacherClass> teacherClasses, Set<SchoolExam> schoolExams) {
		this.sectionType = sectionType;
		this.classInfo = classInfo;
		this.vacantSeat = vacantSeat;
		this.totalSeat = totalSeat;
		this.admissionFrom = admissionFrom;
		this.admissionTo = admissionTo;
		this.admissionDeadline = admissionDeadline;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
		this.attendanceInfos = attendanceInfos;
		this.timeTables = timeTables;
		this.schoolFeeDetails = schoolFeeDetails;
		this.attendanceInfos_1 = attendanceInfos_1;
		this.studentClasses = studentClasses;
		this.classAccessorieses = classAccessorieses;
		this.teacherSubjects = teacherSubjects;
		this.events = events;
		this.teacherClasses = teacherClasses;
		this.schoolExams = schoolExams;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "section_type_id")
	public SectionType getSectionType() {
		return this.sectionType;
	}

	public void setSectionType(SectionType sectionType) {
		this.sectionType = sectionType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id")
	public ClassInfo getClassInfo() {
		return this.classInfo;
	}

	public void setClassInfo(ClassInfo classInfo) {
		this.classInfo = classInfo;
	}

	@Column(name = "vacant_seat")
	public Short getVacantSeat() {
		return this.vacantSeat;
	}

	public void setVacantSeat(Short vacantSeat) {
		this.vacantSeat = vacantSeat;
	}

	@Column(name = "total_seat")
	public Short getTotalSeat() {
		return this.totalSeat;
	}

	public void setTotalSeat(Short totalSeat) {
		this.totalSeat = totalSeat;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "admission_from", length = 10)
	public Date getAdmissionFrom() {
		return this.admissionFrom;
	}

	public void setAdmissionFrom(Date admissionFrom) {
		this.admissionFrom = admissionFrom;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "admission_to", length = 10)
	public Date getAdmissionTo() {
		return this.admissionTo;
	}

	public void setAdmissionTo(Date admissionTo) {
		this.admissionTo = admissionTo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "admission_deadline", length = 10)
	public Date getAdmissionDeadline() {
		return this.admissionDeadline;
	}

	public void setAdmissionDeadline(Date admissionDeadline) {
		this.admissionDeadline = admissionDeadline;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<AttendanceInfo> getAttendanceInfos() {
		return this.attendanceInfos;
	}

	public void setAttendanceInfos(Set<AttendanceInfo> attendanceInfos) {
		this.attendanceInfos = attendanceInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<TimeTable> getTimeTables() {
		return this.timeTables;
	}

	public void setTimeTables(Set<TimeTable> timeTables) {
		this.timeTables = timeTables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<SchoolFeeDetail> getSchoolFeeDetails() {
		return this.schoolFeeDetails;
	}

	public void setSchoolFeeDetails(Set<SchoolFeeDetail> schoolFeeDetails) {
		this.schoolFeeDetails = schoolFeeDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<AttendanceInfo> getAttendanceInfos_1() {
		return this.attendanceInfos_1;
	}

	public void setAttendanceInfos_1(Set<AttendanceInfo> attendanceInfos_1) {
		this.attendanceInfos_1 = attendanceInfos_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<StudentClass> getStudentClasses() {
		return this.studentClasses;
	}

	public void setStudentClasses(Set<StudentClass> studentClasses) {
		this.studentClasses = studentClasses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<ClassAccessories> getClassAccessorieses() {
		return this.classAccessorieses;
	}

	public void setClassAccessorieses(Set<ClassAccessories> classAccessorieses) {
		this.classAccessorieses = classAccessorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<TeacherSubject> getTeacherSubjects() {
		return this.teacherSubjects;
	}

	public void setTeacherSubjects(Set<TeacherSubject> teacherSubjects) {
		this.teacherSubjects = teacherSubjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<TeacherClass> getTeacherClasses() {
		return this.teacherClasses;
	}

	public void setTeacherClasses(Set<TeacherClass> teacherClasses) {
		this.teacherClasses = teacherClasses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	public Set<SchoolExam> getSchoolExams() {
		return this.schoolExams;
	}

	public void setSchoolExams(Set<SchoolExam> schoolExams) {
		this.schoolExams = schoolExams;
	}

}
