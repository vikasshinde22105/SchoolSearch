package com.school.model;

// Generated Jun 16, 2015 4:57:47 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.JsonRawValue;

/**
 * ClassSection generated by hbm2java
 */
@Entity
@Table(name = "class_section", catalog = "school_db")
public class ClassSection implements java.io.Serializable {

	private Integer id;
	private ClassInfo classInfo;
	private String name;
	private Integer lastUpdatedBy;
	private Date lastUpdatedOn;
	private Set<AttendanceInfo> attendanceInfos = new HashSet<AttendanceInfo>(0);
	private Set<TimeTable> timeTables = new HashSet<TimeTable>(0);
	private Set<SchoolFeeDetail> schoolFeeDetails = new HashSet<SchoolFeeDetail>(
			0);
	private Set<AttendanceInfo> attendanceInfos_1 = new HashSet<AttendanceInfo>(
			0);
	private Set<StudentClass> studentClasses = new HashSet<StudentClass>(0);
	private Set<TeacherSubject> teacherSubjects = new HashSet<TeacherSubject>(0);
	private Set<Event> events = new HashSet<Event>(0);
	private Set<TeacherClass> teacherClasses = new HashSet<TeacherClass>(0);
	private Set<SchoolExam> schoolExams = new HashSet<SchoolExam>(0);

	public ClassSection() {
	}

	public ClassSection(ClassInfo classInfo, String name,
			Integer lastUpdatedBy, Date lastUpdatedOn,
			Set<AttendanceInfo> attendanceInfos, Set<TimeTable> timeTables,
			Set<SchoolFeeDetail> schoolFeeDetails,
			Set<AttendanceInfo> attendanceInfos_1,
			Set<StudentClass> studentClasses,
			Set<TeacherSubject> teacherSubjects, Set<Event> events,
			Set<TeacherClass> teacherClasses, Set<SchoolExam> schoolExams) {
		this.classInfo = classInfo;
		this.name = name;
		this.lastUpdatedBy = lastUpdatedBy;
		this.lastUpdatedOn = lastUpdatedOn;
		this.attendanceInfos = attendanceInfos;
		this.timeTables = timeTables;
		this.schoolFeeDetails = schoolFeeDetails;
		this.attendanceInfos_1 = attendanceInfos_1;
		this.studentClasses = studentClasses;
		this.teacherSubjects = teacherSubjects;
		this.events = events;
		this.teacherClasses = teacherClasses;
		this.schoolExams = schoolExams;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id")
	@JsonBackReference
	public ClassInfo getClassInfo() {
		return this.classInfo;
	}

	public void setClassInfo(ClassInfo classInfo) {
		this.classInfo = classInfo;
	}

	@Column(name = "name", length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<AttendanceInfo> getAttendanceInfos() {
		return this.attendanceInfos;
	}

	public void setAttendanceInfos(Set<AttendanceInfo> attendanceInfos) {
		this.attendanceInfos = attendanceInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<TimeTable> getTimeTables() {
		return this.timeTables;
	}

	public void setTimeTables(Set<TimeTable> timeTables) {
		this.timeTables = timeTables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonBackReference
	public Set<SchoolFeeDetail> getSchoolFeeDetails() {
		return this.schoolFeeDetails;
	}

	public void setSchoolFeeDetails(Set<SchoolFeeDetail> schoolFeeDetails) {
		this.schoolFeeDetails = schoolFeeDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<AttendanceInfo> getAttendanceInfos_1() {
		return this.attendanceInfos_1;
	}

	public void setAttendanceInfos_1(Set<AttendanceInfo> attendanceInfos_1) {
		this.attendanceInfos_1 = attendanceInfos_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<StudentClass> getStudentClasses() {
		return this.studentClasses;
	}

	public void setStudentClasses(Set<StudentClass> studentClasses) {
		this.studentClasses = studentClasses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<TeacherSubject> getTeacherSubjects() {
		return this.teacherSubjects;
	}

	public void setTeacherSubjects(Set<TeacherSubject> teacherSubjects) {
		this.teacherSubjects = teacherSubjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<TeacherClass> getTeacherClasses() {
		return this.teacherClasses;
	}

	public void setTeacherClasses(Set<TeacherClass> teacherClasses) {
		this.teacherClasses = teacherClasses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
	@JsonManagedReference
	public Set<SchoolExam> getSchoolExams() {
		return this.schoolExams;
	}

	public void setSchoolExams(Set<SchoolExam> schoolExams) {
		this.schoolExams = schoolExams;
	}

}
