package com.school.model;

// Generated Jun 26, 2015 2:39:37 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StudentSchoolFeeInfo generated by hbm2java
 */
@Entity
@Table(name = "student_school_fee_info")
public class StudentSchoolFeeInfo implements java.io.Serializable {

	private Integer id;
	private SchoolFeeDetail schoolFeeDetail;
	private StudentPersonalInfo studentPersonalInfo;
	private ParentInfo parentInfo;
	private Date paidOn;
	private Boolean isPaymentComplete;
	private Float amountPaid;
	private Integer description;
	private Boolean isDeleted;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;

	public StudentSchoolFeeInfo() {
	}

	public StudentSchoolFeeInfo(SchoolFeeDetail schoolFeeDetail,
			StudentPersonalInfo studentPersonalInfo, ParentInfo parentInfo,
			Date paidOn, Boolean isPaymentComplete, Float amountPaid,
			Integer description, Boolean isDeleted, Date lastUpdatedOn,
			Integer lastUpdatedBy) {
		this.schoolFeeDetail = schoolFeeDetail;
		this.studentPersonalInfo = studentPersonalInfo;
		this.parentInfo = parentInfo;
		this.paidOn = paidOn;
		this.isPaymentComplete = isPaymentComplete;
		this.amountPaid = amountPaid;
		this.description = description;
		this.isDeleted = isDeleted;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_fee_detail_id")
	public SchoolFeeDetail getSchoolFeeDetail() {
		return this.schoolFeeDetail;
	}

	public void setSchoolFeeDetail(SchoolFeeDetail schoolFeeDetail) {
		this.schoolFeeDetail = schoolFeeDetail;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_id")
	public StudentPersonalInfo getStudentPersonalInfo() {
		return this.studentPersonalInfo;
	}

	public void setStudentPersonalInfo(StudentPersonalInfo studentPersonalInfo) {
		this.studentPersonalInfo = studentPersonalInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public ParentInfo getParentInfo() {
		return this.parentInfo;
	}

	public void setParentInfo(ParentInfo parentInfo) {
		this.parentInfo = parentInfo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "paid_on", length = 10)
	public Date getPaidOn() {
		return this.paidOn;
	}

	public void setPaidOn(Date paidOn) {
		this.paidOn = paidOn;
	}

	@Column(name = "is_payment_complete")
	public Boolean getIsPaymentComplete() {
		return this.isPaymentComplete;
	}

	public void setIsPaymentComplete(Boolean isPaymentComplete) {
		this.isPaymentComplete = isPaymentComplete;
	}

	@Column(name = "amount_paid", precision = 9, scale = 3)
	public Float getAmountPaid() {
		return this.amountPaid;
	}

	public void setAmountPaid(Float amountPaid) {
		this.amountPaid = amountPaid;
	}

	@Column(name = "description")
	public Integer getDescription() {
		return this.description;
	}

	public void setDescription(Integer description) {
		this.description = description;
	}

	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}


}
