package com.school.model;

// Generated Jun 16, 2015 4:57:47 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * TimeTable generated by hbm2java
 */
@Entity
@Table(name = "time_table", catalog = "school_db")
public class TimeTable implements java.io.Serializable {

	private Integer id;
	private Subject subject;
	private School school;
	private ClassInfo classInfo;
	private ClassSection classSection;
	private Date startTime;
	private Date endTime;
	private String periodName;
	private Date createdOn;
	private Boolean status;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;
	private Set<AttendanceInfo> attendanceInfos = new HashSet<AttendanceInfo>(0);
	private Set<TeacherHomework> teacherHomeworks = new HashSet<TeacherHomework>(
			0);
	private Set<TeacherTimeTable> teacherTimeTables = new HashSet<TeacherTimeTable>(
			0);

	public TimeTable() {
	}

	public TimeTable(Subject subject, School school, ClassInfo classInfo,
			ClassSection classSection, Date startTime, Date endTime,
			String periodName, Date createdOn, Boolean status,
			Date lastUpdatedOn, Integer lastUpdatedBy,
			Set<AttendanceInfo> attendanceInfos,
			Set<TeacherHomework> teacherHomeworks,
			Set<TeacherTimeTable> teacherTimeTables) {
		this.subject = subject;
		this.school = school;
		this.classInfo = classInfo;
		this.classSection = classSection;
		this.startTime = startTime;
		this.endTime = endTime;
		this.periodName = periodName;
		this.createdOn = createdOn;
		this.status = status;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
		this.attendanceInfos = attendanceInfos;
		this.teacherHomeworks = teacherHomeworks;
		this.teacherTimeTables = teacherTimeTables;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subject_id")
	@JsonBackReference
	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_id")
	@JsonBackReference
	public School getSchool() {
		return this.school;
	}

	public void setSchool(School school) {
		this.school = school;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id")
	@JsonBackReference
	public ClassInfo getClassInfo() {
		return this.classInfo;
	}

	public void setClassInfo(ClassInfo classInfo) {
		this.classInfo = classInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "section_id")
	@JsonBackReference
	public ClassSection getClassSection() {
		return this.classSection;
	}

	public void setClassSection(ClassSection classSection) {
		this.classSection = classSection;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "period_name", length = 200)
	public String getPeriodName() {
		return this.periodName;
	}

	public void setPeriodName(String periodName) {
		this.periodName = periodName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "timeTable")
	@JsonManagedReference
	public Set<AttendanceInfo> getAttendanceInfos() {
		return this.attendanceInfos;
	}

	public void setAttendanceInfos(Set<AttendanceInfo> attendanceInfos) {
		this.attendanceInfos = attendanceInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "timeTable")
	@JsonManagedReference
	public Set<TeacherHomework> getTeacherHomeworks() {
		return this.teacherHomeworks;
	}

	public void setTeacherHomeworks(Set<TeacherHomework> teacherHomeworks) {
		this.teacherHomeworks = teacherHomeworks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "timeTable")
	@JsonManagedReference
	public Set<TeacherTimeTable> getTeacherTimeTables() {
		return this.teacherTimeTables;
	}

	public void setTeacherTimeTables(Set<TeacherTimeTable> teacherTimeTables) {
		this.teacherTimeTables = teacherTimeTables;
	}

}
