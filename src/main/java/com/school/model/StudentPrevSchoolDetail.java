package com.school.model;

// Generated Jun 26, 2015 2:39:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StudentPrevSchoolDetail generated by hbm2java
 */
@Entity
@Table(name = "student_prev_school_detail", catalog = "school_db")
public class StudentPrevSchoolDetail implements java.io.Serializable {

	private Integer id;
	private School school;
	private ClassInfo classInfo;
	private StudentPersonalInfo studentPersonalInfo;
	private String prevSchoolName;
	private String locationText;
	private Float aggregatePercentage;
	private Date admissionDate;
	private Date dateOfLeaving;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;

	public StudentPrevSchoolDetail() {
	}

	public StudentPrevSchoolDetail(School school, ClassInfo classInfo,
			StudentPersonalInfo studentPersonalInfo, String prevSchoolName,
			String locationText, Float aggregatePercentage, Date admissionDate,
			Date dateOfLeaving, Date lastUpdatedOn, Integer lastUpdatedBy) {
		this.school = school;
		this.classInfo = classInfo;
		this.studentPersonalInfo = studentPersonalInfo;
		this.prevSchoolName = prevSchoolName;
		this.locationText = locationText;
		this.aggregatePercentage = aggregatePercentage;
		this.admissionDate = admissionDate;
		this.dateOfLeaving = dateOfLeaving;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prev_school_id")
	public School getSchool() {
		return this.school;
	}

	public void setSchool(School school) {
		this.school = school;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id")
	public ClassInfo getClassInfo() {
		return this.classInfo;
	}

	public void setClassInfo(ClassInfo classInfo) {
		this.classInfo = classInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_id")
	public StudentPersonalInfo getStudentPersonalInfo() {
		return this.studentPersonalInfo;
	}

	public void setStudentPersonalInfo(StudentPersonalInfo studentPersonalInfo) {
		this.studentPersonalInfo = studentPersonalInfo;
	}

	@Column(name = "prev_school_name", length = 400)
	public String getPrevSchoolName() {
		return this.prevSchoolName;
	}

	public void setPrevSchoolName(String prevSchoolName) {
		this.prevSchoolName = prevSchoolName;
	}

	@Column(name = "location_text", length = 400)
	public String getLocationText() {
		return this.locationText;
	}

	public void setLocationText(String locationText) {
		this.locationText = locationText;
	}

	@Column(name = "aggregate_percentage", precision = 9, scale = 3)
	public Float getAggregatePercentage() {
		return this.aggregatePercentage;
	}

	public void setAggregatePercentage(Float aggregatePercentage) {
		this.aggregatePercentage = aggregatePercentage;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "admission_date", length = 10)
	public Date getAdmissionDate() {
		return this.admissionDate;
	}

	public void setAdmissionDate(Date admissionDate) {
		this.admissionDate = admissionDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_leaving", length = 10)
	public Date getDateOfLeaving() {
		return this.dateOfLeaving;
	}

	public void setDateOfLeaving(Date dateOfLeaving) {
		this.dateOfLeaving = dateOfLeaving;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
