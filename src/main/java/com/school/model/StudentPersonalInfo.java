package com.school.model;

// Generated Jun 26, 2015 2:39:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StudentPersonalInfo generated by hbm2java
 */
@Entity
@Table(name = "student_personal_info", catalog = "school_db")
public class StudentPersonalInfo implements java.io.Serializable {

	private Integer id;
	private UserRegistrationInfo userRegistrationInfo;
	private Boolean status;
	private Date admissionDate;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;
	private Set<StudentParent> studentParents = new HashSet<StudentParent>(0);
	private Set<StudentSchoolInfo> studentSchoolInfos = new HashSet<StudentSchoolInfo>(
			0);
	private Set<StudentAttendance> studentAttendances = new HashSet<StudentAttendance>(
			0);
	private Set<TeacherHomeworkRemarks> teacherHomeworkRemarkses = new HashSet<TeacherHomeworkRemarks>(
			0);
	private Set<StudentClass> studentClasses = new HashSet<StudentClass>(0);
	private Set<StudentMarksReport> studentMarksReports = new HashSet<StudentMarksReport>(
			0);
	private Set<StudentPrevSchoolDetail> studentPrevSchoolDetails = new HashSet<StudentPrevSchoolDetail>(
			0);
	private Set<StudentSchoolFeeInfo> studentSchoolFeeInfos = new HashSet<StudentSchoolFeeInfo>(
			0);

	public StudentPersonalInfo() {
	}

	public StudentPersonalInfo(UserRegistrationInfo userRegistrationInfo,
			Boolean status, Date admissionDate, Date lastUpdatedOn,
			Integer lastUpdatedBy, Set<StudentParent> studentParents,
			Set<StudentSchoolInfo> studentSchoolInfos,
			Set<StudentAttendance> studentAttendances,
			Set<TeacherHomeworkRemarks> teacherHomeworkRemarkses,
			Set<StudentClass> studentClasses,
			Set<StudentMarksReport> studentMarksReports,
			Set<StudentPrevSchoolDetail> studentPrevSchoolDetails,
			Set<StudentSchoolFeeInfo> studentSchoolFeeInfos) {
		this.userRegistrationInfo = userRegistrationInfo;
		this.status = status;
		this.admissionDate = admissionDate;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
		this.studentParents = studentParents;
		this.studentSchoolInfos = studentSchoolInfos;
		this.studentAttendances = studentAttendances;
		this.teacherHomeworkRemarkses = teacherHomeworkRemarkses;
		this.studentClasses = studentClasses;
		this.studentMarksReports = studentMarksReports;
		this.studentPrevSchoolDetails = studentPrevSchoolDetails;
		this.studentSchoolFeeInfos = studentSchoolFeeInfos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public UserRegistrationInfo getUserRegistrationInfo() {
		return this.userRegistrationInfo;
	}

	public void setUserRegistrationInfo(
			UserRegistrationInfo userRegistrationInfo) {
		this.userRegistrationInfo = userRegistrationInfo;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "admission_date", length = 10)
	public Date getAdmissionDate() {
		return this.admissionDate;
	}

	public void setAdmissionDate(Date admissionDate) {
		this.admissionDate = admissionDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentParent> getStudentParents() {
		return this.studentParents;
	}

	public void setStudentParents(Set<StudentParent> studentParents) {
		this.studentParents = studentParents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentSchoolInfo> getStudentSchoolInfos() {
		return this.studentSchoolInfos;
	}

	public void setStudentSchoolInfos(Set<StudentSchoolInfo> studentSchoolInfos) {
		this.studentSchoolInfos = studentSchoolInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentAttendance> getStudentAttendances() {
		return this.studentAttendances;
	}

	public void setStudentAttendances(Set<StudentAttendance> studentAttendances) {
		this.studentAttendances = studentAttendances;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<TeacherHomeworkRemarks> getTeacherHomeworkRemarkses() {
		return this.teacherHomeworkRemarkses;
	}

	public void setTeacherHomeworkRemarkses(
			Set<TeacherHomeworkRemarks> teacherHomeworkRemarkses) {
		this.teacherHomeworkRemarkses = teacherHomeworkRemarkses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentClass> getStudentClasses() {
		return this.studentClasses;
	}

	public void setStudentClasses(Set<StudentClass> studentClasses) {
		this.studentClasses = studentClasses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentMarksReport> getStudentMarksReports() {
		return this.studentMarksReports;
	}

	public void setStudentMarksReports(
			Set<StudentMarksReport> studentMarksReports) {
		this.studentMarksReports = studentMarksReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentPrevSchoolDetail> getStudentPrevSchoolDetails() {
		return this.studentPrevSchoolDetails;
	}

	public void setStudentPrevSchoolDetails(
			Set<StudentPrevSchoolDetail> studentPrevSchoolDetails) {
		this.studentPrevSchoolDetails = studentPrevSchoolDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentPersonalInfo")
	public Set<StudentSchoolFeeInfo> getStudentSchoolFeeInfos() {
		return this.studentSchoolFeeInfos;
	}

	public void setStudentSchoolFeeInfos(
			Set<StudentSchoolFeeInfo> studentSchoolFeeInfos) {
		this.studentSchoolFeeInfos = studentSchoolFeeInfos;
	}

}
